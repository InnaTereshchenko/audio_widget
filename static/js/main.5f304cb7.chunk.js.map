{"version":3,"sources":["SongWidget.js","SongList.js","App.js","index.js"],"names":["SongWidget","_ref","currentSong","player","document","getElementById","react_default","a","createElement","className","src","album","cover","alt","duration","title","artist","name","type","onClick","play","preview","id","SongList","songs","chooseCurrentSong","map","song","i","seconds","min","Math","floor","sec","concat","getTime","getSongs","Object","asyncToGenerator","regenerator_default","mark","_callee","search","searchValue","response","wrap","_context","prev","next","split","join","fetch","method","headers","x-rapidapi-host","x-rapidapi-key","sent","abrupt","json","stop","_x","apply","this","arguments","App","_useState","useState","_useState2","slicedToArray","setSongs","_useState3","_useState4","setSearchValue","_useState5","_useState6","setCurrentSong","useEffect","then","data","songIndex","find","value","onChange","e","target","src_SongWidget","src_SongList","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.5f304cb7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SongWidget = ({ currentSong }) => {\n  const player = document.getElementById('music');\n\n  return (\n    <section className=\"widget\">\n      <div className=\"widget__visual\">\n        <img src={currentSong.album.cover} className=\"widget__picture\" alt=\"\" />\n        <div className=\"widget__visualizer\">\n          <p>{currentSong.duration}</p>\n        </div>\n      </div>\n      <div className=\"widget__controls\">\n        <p>{currentSong.title}</p>\n        <p>{currentSong.artist.name}</p>\n        <button type=\"button\" onClick={() => player.play()}>Prev</button>\n        <button type=\"button\" onClick={() => player.play()}>Play</button>\n        <button type=\"button\" onClick={() => player.play()}>Next</button>\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        <audio src={currentSong.preview} id=\"music\" />\n      </div>\n\n    </section>\n  );\n};\n\nSongWidget.propTypes = {\n  currentSong: PropTypes.shape().isRequired,\n};\n\nexport default SongWidget;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SongList = ({ songs, chooseCurrentSong }) => {\n  const getTime = (seconds) => {\n    const min = Math.floor(seconds / 60);\n    const sec = seconds % 60;\n\n    return `${min}:${(sec > 9) ? sec : `0${sec}`}`;\n  };\n\n  return (\n    <section className=\"list\">\n      <ul className=\"list__list\">\n        {songs\n          ? (\n            songs.map((song, i) => (\n              // eslint-disable-next-line max-len\n              // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-noninteractive-element-interactions\n              <li onClick={() => chooseCurrentSong(i)}>\n                <div className=\"list__song\">\n                  <span>{i + 1}</span>\n                  <span>{song.title}</span>\n                  <span>{getTime(song.duration)}</span>\n                </div>\n              </li>\n            )))\n          : (\n            <p>No songs. Search something</p>\n          ) }\n      </ul>\n    </section>\n  );\n};\n\nSongList.propTypes = {\n  songs: PropTypes.arrayOf(PropTypes.object).isRequired,\n  chooseCurrentSong: PropTypes.func.isRequired,\n};\n\nexport default SongList;\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport SongWidget from './SongWidget';\nimport SongList from './SongList';\n\nconst getSongs = async(search) => {\n  const searchValue = search.split(' ').join('-');\n  // eslint-disable-next-line max-len\n  const response = await fetch(`https://deezerdevs-deezer.p.rapidapi.com/search?q=${searchValue || `eminem`}`, {\n    method: 'GET',\n    headers: {\n      'x-rapidapi-host': 'deezerdevs-deezer.p.rapidapi.com',\n      'x-rapidapi-key': '5762d31ec1msh75e811964ce2558p1eb89fjsn15f47304a68a',\n    },\n  });\n\n  return response.json();\n};\n\nfunction App() {\n  const [songs, setSongs] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n  const [currentSong, setCurrentSong] = useState(\n    {\n      artist: {},\n      album: {},\n    }\n  );\n\n  useEffect(() => {\n    getSongs(searchValue).then(data => setSongs(data.data));\n  });\n\n  const chooseCurrentSong = (songIndex) => {\n    setCurrentSong(songs.find((song, i) => i === songIndex));\n  };\n\n  return (\n    <div>\n      <header className=\"header\">\n        <h1 className=\"header__title\">VISAGE</h1>\n        <form className=\"header__form form\">\n          <lable>\n            Search\n            <input\n              type=\"text\"\n              className=\"form__input\"\n              value={searchValue}\n              onChange={e => setSearchValue(e.target.value)}\n            />\n          </lable>\n          <img\n            src=\"./images/search_icon.png\"\n            alt=\"search\"\n            className=\"form__search-icon\"\n          />\n        </form>\n      </header>\n      <main className=\"main\">\n        <SongWidget\n          currentSong={currentSong}\n          chooseCurrentSong={chooseCurrentSong}\n        />\n        <SongList songs={songs} chooseCurrentSong={chooseCurrentSong} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}